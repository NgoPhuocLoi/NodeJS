<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="ie=edge" />
        <title>Document</title>
        <!-- <link rel="stylesheet" href="app.css"> -->
        
        <style>
            body {
    font-family: sans-serif;
    background-color: #ccc;
}
::-webkit-scrollbar {
    display: none;
}
* {
    box-sizing: border-box;
}

.container {
    margin: 0 auto;
    max-width: 1000px;
    text-align: center;
}


#coursesList{
    padding: 0;
    margin: 0;
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    margin-top: 20px;
}

/* .course{
    background-color: #fff;
    width: 48%;
    display: flex;
    margin-bottom: 10px;
    border-radius: 10px;
    overflow: hidden;

} */
.course{
    width: 350px; height: 120px;
	
	background: #f2f9fe;
	background: linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);
	background: -webkit-linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);
	background: -moz-linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);
	background: -ms-linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);
	background: -o-linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);
	
	border-radius: 100px;
	-webkit-border-radius: 100px;
	-moz-border-radius: 100px;
	
	position: relative;
	margin: 120px auto 20px;
}

.course:after, .course:before {
	content: '';
	position: absolute;
	background: #f2f9fe;
	z-index: -1
}

.course:after {
	width: 100px; height: 100px;
	top: -50px; left: 50px;
	
	border-radius: 100px;
	-webkit-border-radius: 100px;
	-moz-border-radius: 100px;
}

.course:before {
	width: 180px; height: 180px;
	top: -90px; right: 50px;
	border-radius: 200px;
	-webkit-border-radius: 200px;
	-moz-border-radius: 200px;
}


.course-info{
    flex: 2;
    padding: 10px;
}

.course-info h2 {
    margin-top: -18px;
}

.course-img{
    flex: 3;
    padding: 10px;
}

.course img{
    width: 100%;
    /* height: 100%; */
    border-radius: 6px;
}

#searchBar {
    width: 100%;
    height: 32px;
    border-radius: 3px;
    border: 1px solid #eaeaea;
    padding: 5px 10px;
    font-size: 12px;
}

#searchWrapper {
    position: relative;
}

#searchWrapper input{
    height: 46px;
    font-size: 16px;
}

#searchWrapper::after {
    content: 'üîç';
    position: absolute;
    top: 7px;
    right: 15px;
}

@media (max-width:770px){
    .course{
        width: 100%;
    }
}
        </style>
    </head>
    <body>

        <div id="searchWrapper" class="mt-4">
            <input
                type="text"
                name="searchBar"
                id="searchBar"
                placeholder="Nh·∫≠p t√™n c√¥ng th·ª©c ƒë·ªÉ t√¨m ki·∫øm"
            />
        </div>
        <div class="container mt-4">
            <ul id="coursesList">
            {{#each formulas}}
                <div name="{{this.name}}" class="input"></div>
            {{/each}}
            </ul>
        </div>
        
       
        <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
        <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3.0.1/es5/tex-mml-chtml.js"></script>
        <!-- <script src="custom.js"></script> -->
        <script>
                        
const coursesList = document.getElementById('coursesList');
const searchBar = document.getElementById('searchBar');
const courses = []
const input = document.querySelectorAll("div[name]")

input.forEach(course => {
    courses.push({name: course.getAttribute("name")})
})
console.log(courses)

searchBar.addEventListener('keyup', (e) => {
    const searchString = e.target.value.toLowerCase();

    const filteredCourses = courses.filter((course) => {
        const indexSlap = course.name.indexOf("\\")
        const indexSpace = course.name.indexOf(' ', course.name.indexOf("\\"))
        return (
            (course.name.toLowerCase().slice(0, indexSlap) + course.name.toLowerCase().slice(indexSpace)).includes(searchString)
        );
    });


    
    displayCourses(filteredCourses);
    MathJax.typeset(); 
});

/*
<a href="${course.video}" class="course-img" target="_blank">
                    <img src="${course.image}" />   
                </a>
    <h5>${course.age}</h5>
*/

const displayCourses = (courses) => {
    const htmlString = courses
        .map((course) => {
            return `
            <li class="course">
                <div class="course-info">
                    <h2>${course.name}</h2>
                    
                </div>
                
                
            </li>
        `;
        })
        .join('');
    coursesList.innerHTML = htmlString;
};
displayCourses(courses);

            
            
        </script>

        <script>
            
            
        </script>
    </body>
</html>
